---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: datasets.windtunnel.plantd.org
spec:
  group: windtunnel.plantd.org
  names:
    kind: DataSet
    listKind: DataSetList
    plural: datasets
    singular: dataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.startTime
      name: StartTime
      type: string
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: string
    - jsonPath: .status.jobStatus
      name: JobStatus
      type: string
    - jsonPath: .status.pvcStatus
      name: VolumeStatus
      type: string
    - jsonPath: .status.errorCount
      name: ErrorCount
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataSet is the Schema for the datasets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataSetSpec defines the desired state of DataSet.
            properties:
              compressPerSchema:
                description: Flag for compression behavior. Takes effect only if `compressedFileFormat`
                  is set. When set to `false` (default), files from all Schemas will
                  be compressed into a single compressed file in each repetition.
                  When set to `true`, files from each Schema will be compressed into
                  a separate compressed file in each repetition.
                type: boolean
              compressedFileFormat:
                description: Format of the compressed file containing output files.
                  Available value is `zip`. Leave empty to disable compression.
                type: string
              fileFormat:
                description: Format of the output file containing generated data.
                  Available values are `csv` and `binary`.
                type: string
              numFiles:
                description: Number of repetitions of the data generation process.
                  If `compressedFileFormat` is unset, this is the number of files
                  for each Schema. If `compressedFileFormat` is set and `compressPerSchema`
                  is `false`, this is the number of compressed files for each Schema.
                  If `compressedFileFormat` is set and `compressPerSchema` is `true`,
                  this is the total number of compressed files.
                format: int32
                type: integer
              parallelJobs:
                description: Number of parallel jobs when generating the dataset.
                format: int32
                type: integer
              schemas:
                description: List of Schemas in the DataSet.
                items:
                  description: SchemaSelector defines the reference to a Schema and
                    its usage in the DataSet.
                  properties:
                    name:
                      description: Name of the Schema. Note that the Schema must be
                        present in the same namespace as the DataSet.
                      type: string
                    numFilesPerCompressedFile:
                      additionalProperties:
                        type: integer
                      description: Range of number of files to be generated in the
                        compressed file. Take effect only if `compressedFileFormat`
                        is set in the DataSet. Should be a map containing `min` and
                        `max` keys. A random number is picked from the specified range.
                      type: object
                    numRecords:
                      additionalProperties:
                        type: integer
                      description: Range of number of rows to be generated in each
                        output file. Should be a map containing `min` and `max` keys.
                        For each output file, a random number is picked from the specified
                        range.
                      type: object
                  required:
                  - name
                  type: object
                type: array
            required:
            - numFiles
            - schemas
            type: object
          status:
            description: DataSetStatus defines the observed state of DataSet.
            properties:
              completionTime:
                description: Time when the data generating job completed.
                format: date-time
                type: string
              errorCount:
                description: Number of errors occurred.
                format: int32
                type: integer
              errors:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: List of errors occurred, which is a map from error type
                  to list of error messages.
                type: object
              jobStatus:
                description: Status of the data generating job.
                type: string
              lastGeneration:
                description: Last generation of the DataSet object. For internal use
                  only.
                format: int64
                type: integer
              pvcStatus:
                description: Status of the PVC of the data generating job.
                type: string
              startTime:
                description: Time when the data generating job started.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
