name: PlantD
version: 1.0.0
dataGenerator:
  defaultImage: ghcr.io/carnegiemellon-plantd/datagenerator:latest
  defaultParallelism: 1
  backoffLimit: 0
  defaultStorageSize: 5Gi
  path: /test # Default path where K6 looks for files
monitor:
  service:
    labelKeys:
      pipeline: plantd-pipeline
      experiment: plantd-experiment
    portName: metrics
  serviceMonitor:
    labels:
      plantd-app: monitor
    endpoint:
      defaultPort: metrics
      defaultPath: /metrics
loadGenerator:
  filename:
    script: script.js
    endpoint: endpoint.json
    plainText: plaintext.txt
    dataSet: dataset.json
    loadPattern: loadpattern.json
  copier:
    image: busybox:1.36.1
    backoffLimit: 0
  testRun:
    remoteWriteArgs: --out experimental-prometheus-rw
    remoteWriteEnvVar:
      name: K6_PROMETHEUS_RW_SERVER_URL
      value: http://plantd-prometheus.plantd-operator-system.svc:9090/api/v1/write
rbac:
  serviceAccount:
    controllerManager: plantd-operator-controller-manager # See ../rbac/service_account.yaml
    prometheus: plantd-operator-prometheus # See ../rbac/prometheus_service_account.yaml
    openCost: plantd-operator-opencost # See ../rbac/opencost_service_account.yaml
core:
  proxy:
    name: plantd-proxy
    labels:
      plantd-app: proxy
    defaultReplicas: 1
    defaultImage: ghcr.io/carnegiemellon-plantd/plantd-proxy:latest
    defaultCPURequest: 50m
    defaultMemoryRequest: 50Mi
    defaultCPULimit: 200m
    defaultMemoryLimit: 200Mi
    containerPortName: http
    containerPort: 5000
    servicePortName: http
    servicePort: 5000
  studio:
    name: plantd-studio
    labels:
      plantd-app: studio
    defaultReplicas: 1
    defaultImage: ghcr.io/carnegiemellon-plantd/plantd-studio:latest
    defaultCPURequest: 50m
    defaultMemoryRequest: 50Mi
    defaultCPULimit: 200m
    defaultMemoryLimit: 200Mi
    containerPortName: http
    containerPort: 8080
    servicePortName: http
    servicePort: 80
  prometheus:
    name: plantd-prometheus
    defaultScrapeInterval: 15s
    defaultReplicas: 1
    defaultCPURequest: 100m
    defaultMemoryRequest: 100Mi
    defaultCPULimit: 400m
    defaultMemoryLimit: 400Mi
    servicePortName: prom-http
    servicePort: 9090
  thanos:
    defaultImage: quay.io/thanos/thanos:v0.34.1
    defaultVersion: v0.34.1
    sidecar:
      defaultCPURequest: 50m
      defaultMemoryRequest: 50Mi
      defaultCPULimit: 200m
      defaultMemoryLimit: 200Mi
      servicePortName: thanos-grpc
      servicePort: 10901
    store:
      name: plantd-thanos-store
      labels:
        plantd-app: thanos-store
      defaultReplicas: 1
      defaultCPURequest: 50m
      defaultMemoryRequest: 50Mi
      defaultCPULimit: 200m
      defaultMemoryLimit: 200Mi
      defaultStorageSize: 10Gi
      containerGrpcPortName: grpc
      containerGrpcPort: 10901
      containerHttpPortName: http
      containerHttpPort: 10902
      serviceGrpcPortName: grpc
      serviceGrpcPort: 10901
      serviceHttpPortName: http
      serviceHttpPort: 10902
      path: /var/thanos/store
    compactor:
      name: plantd-thanos-compactor
      labels:
        plantd-app: thanos-compactor
      defaultReplicas: 1
      defaultCPURequest: 50m
      defaultMemoryRequest: 50Mi
      defaultCPULimit: 200m
      defaultMemoryLimit: 200Mi
      defaultStorageSize: 10Gi
      containerPortName: http
      containerPort: 10902
      servicePortName: http
      servicePort: 10902
      path: /var/thanos/compactor
    querier:
      name: plantd-thanos-querier
      labels:
        plantd-app: thanos-querier
      defaultReplicas: 1
      defaultCPURequest: 50m
      defaultMemoryRequest: 50Mi
      defaultCPULimit: 200m
      defaultMemoryLimit: 200Mi
      containerGrpcPortName: grpc
      containerGrpcPort: 10901
      containerHttpPortName: http
      containerHttpPort: 9090
      serviceGrpcPortName: grpc
      serviceGrpcPort: 10901
      serviceHttpPortName: http
      serviceHttpPort: 9090
  redis:
    name: plantd-redis
    labels:
      plantd-app: redis
    defaultReplicas: 1
    defaultImage: redis/redis-stack-server:7.2.0-v10
    defaultCPURequest: 50m
    defaultMemoryRequest: 50Mi
    defaultCPULimit: 400m
    defaultMemoryLimit: 400Mi
    containerPortName: resp
    containerPort: 6379
    servicePortName: resp
    servicePort: 6379
  openCost:
    name: plantd-opencost
    labels:
      plantd-app: opencost
    defaultReplicas: 1
    defaultImage: quay.io/kubecost1/kubecost-cost-model:latest
    defaultCPURequest: 10m
    defaultMemoryRequest: 50Mi
    defaultCPULimit: 500m
    defaultMemoryLimit: 500Mi
    containerPortName: opencost
    containerPort: 9003
    servicePortName: opencost
    servicePort: 9003
    ui:
      defaultImage: quay.io/kubecost1/opencost-ui:1.105.2
      defaultCPURequest: 10m
      defaultMemoryRequest: 50Mi
      defaultCPULimit: 500m
      defaultMemoryLimit: 500Mi
      containerPortName: opencost-ui
      containerPort: 9090
      servicePortName: opencost-ui
      servicePort: 9090

costService:
  image: ghcr.io/carnegiemellon-plantd/costexporter:latest
  opencost:
    url: http://opencost.plantd-operator-system.svc.cluster.local:9003
digitalTwin:
  image: ghcr.io/carnegiemellon-plantd/digitaltwin:latest
database:
  prometheus:
    # Ensure Prometheus service name, namespace, and port are correct
    url: http://prometheus-service.plantd-operator-system.svc.cluster.local:9090
    thanosUrl: http://thanos-querier.plantd-operator-system.svc.cluster.local:9090
  redis:
    # Ensure Redis service name, namespace, and port are correct
    host: redis-service.plantd-operator-system.svc.cluster.local
    port: 6379